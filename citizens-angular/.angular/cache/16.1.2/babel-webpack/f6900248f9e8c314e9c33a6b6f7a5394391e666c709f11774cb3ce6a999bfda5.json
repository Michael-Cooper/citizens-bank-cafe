{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { inject, InjectionToken, LOCALE_ID } from '@angular/core';\nexport var OWL_DATE_TIME_LOCALE = new InjectionToken('OWL_DATE_TIME_LOCALE', {\n  providedIn: 'root',\n  factory: OWL_DATE_TIME_LOCALE_FACTORY\n});\nexport function OWL_DATE_TIME_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\nexport var OWL_DATE_TIME_LOCALE_PROVIDER = {\n  provide: OWL_DATE_TIME_LOCALE,\n  useExisting: LOCALE_ID\n};\nvar DateTimeAdapter = function () {\n  function DateTimeAdapter() {\n    this._localeChanges = new Subject();\n    this.millisecondsInDay = 86400000;\n    this.milliseondsInMinute = 60000;\n  }\n  Object.defineProperty(DateTimeAdapter.prototype, \"localeChanges\", {\n    get: function () {\n      return this._localeChanges;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  DateTimeAdapter.prototype.compare = function (first, second) {\n    if (!this.isValid(first) || !this.isValid(second)) {\n      throw Error('JSNativeDate: Cannot compare invalid dates.');\n    }\n    var dateFirst = this.clone(first);\n    var dateSecond = this.clone(second);\n    var diff = this.getTime(dateFirst) - this.getTime(dateSecond);\n    if (diff < 0) {\n      return -1;\n    } else if (diff > 0) {\n      return 1;\n    } else {\n      return diff;\n    }\n  };\n  DateTimeAdapter.prototype.compareYear = function (first, second) {\n    if (!this.isValid(first) || !this.isValid(second)) {\n      throw Error('JSNativeDate: Cannot compare invalid dates.');\n    }\n    var yearLeft = this.getYear(first);\n    var yearRight = this.getYear(second);\n    var diff = yearLeft - yearRight;\n    if (diff < 0) {\n      return -1;\n    } else if (diff > 0) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n  DateTimeAdapter.prototype.deserialize = function (value) {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  };\n  DateTimeAdapter.prototype.setLocale = function (locale) {\n    this.locale = locale;\n    this._localeChanges.next();\n  };\n  DateTimeAdapter.prototype.clampDate = function (date, min, max) {\n    if (min && this.compare(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compare(date, max) > 0) {\n      return max;\n    }\n    return date;\n  };\n  return DateTimeAdapter;\n}();\nexport { DateTimeAdapter };","map":{"version":3,"names":["Subject","inject","InjectionToken","LOCALE_ID","OWL_DATE_TIME_LOCALE","providedIn","factory","OWL_DATE_TIME_LOCALE_FACTORY","OWL_DATE_TIME_LOCALE_PROVIDER","provide","useExisting","DateTimeAdapter","_localeChanges","millisecondsInDay","milliseondsInMinute","Object","defineProperty","prototype","get","enumerable","configurable","compare","first","second","isValid","Error","dateFirst","clone","dateSecond","diff","getTime","compareYear","yearLeft","getYear","yearRight","deserialize","value","isDateInstance","invalid","setLocale","locale","next","clampDate","date","min","max"],"sources":["C:/Users/Cooper/Documents/Angular/citizens-angular-app/citizens-angular/node_modules/ng-pick-datetime/date-time/adapter/date-time-adapter.class.js"],"sourcesContent":["import { Subject } from 'rxjs';\nimport { inject, InjectionToken, LOCALE_ID } from '@angular/core';\nexport var OWL_DATE_TIME_LOCALE = new InjectionToken('OWL_DATE_TIME_LOCALE', {\n    providedIn: 'root',\n    factory: OWL_DATE_TIME_LOCALE_FACTORY,\n});\nexport function OWL_DATE_TIME_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\nexport var OWL_DATE_TIME_LOCALE_PROVIDER = { provide: OWL_DATE_TIME_LOCALE, useExisting: LOCALE_ID };\nvar DateTimeAdapter = (function () {\n    function DateTimeAdapter() {\n        this._localeChanges = new Subject();\n        this.millisecondsInDay = 86400000;\n        this.milliseondsInMinute = 60000;\n    }\n    Object.defineProperty(DateTimeAdapter.prototype, \"localeChanges\", {\n        get: function () {\n            return this._localeChanges;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DateTimeAdapter.prototype.compare = function (first, second) {\n        if (!this.isValid(first) || !this.isValid(second)) {\n            throw Error('JSNativeDate: Cannot compare invalid dates.');\n        }\n        var dateFirst = this.clone(first);\n        var dateSecond = this.clone(second);\n        var diff = this.getTime(dateFirst) - this.getTime(dateSecond);\n        if (diff < 0) {\n            return -1;\n        }\n        else if (diff > 0) {\n            return 1;\n        }\n        else {\n            return diff;\n        }\n    };\n    DateTimeAdapter.prototype.compareYear = function (first, second) {\n        if (!this.isValid(first) || !this.isValid(second)) {\n            throw Error('JSNativeDate: Cannot compare invalid dates.');\n        }\n        var yearLeft = this.getYear(first);\n        var yearRight = this.getYear(second);\n        var diff = yearLeft - yearRight;\n        if (diff < 0) {\n            return -1;\n        }\n        else if (diff > 0) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    };\n    DateTimeAdapter.prototype.deserialize = function (value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    };\n    DateTimeAdapter.prototype.setLocale = function (locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    };\n    DateTimeAdapter.prototype.clampDate = function (date, min, max) {\n        if (min && this.compare(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compare(date, max) > 0) {\n            return max;\n        }\n        return date;\n    };\n    return DateTimeAdapter;\n}());\nexport { DateTimeAdapter };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}