{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../reservation.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ReservationListComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ReservationListComponent_tr_16_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const reservation_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateReservation(reservation_r1.id));\n    });\n    i0.ɵɵtext(11, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \") \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const reservation_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reservation_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reservation_r1.phoneNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reservation_r1.partySize);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reservation_r1.time);\n  }\n}\nexport class ReservationListComponent {\n  constructor(reservationService, router) {\n    this.reservationService = reservationService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.getReservations();\n    /*\n        this.reservations = [{\n          \"id\": 1,\n          \"name\": \"Bill Shakespeare\",\n          \"phonenumber\": \"111-111-1111\",\n          \"partysize\": 12,\n          \"time\": new Date(\"2023-06-28T18:30:00\")\n        }] */\n  }\n\n  getReservations() {\n    this.reservationService.getReservationsList().subscribe(data => {\n      this.reservations = data;\n      console.log(data);\n    });\n  }\n  updateReservation(id) {\n    this.router.navigate(['update-reservation', id]);\n  }\n}\nReservationListComponent.ɵfac = function ReservationListComponent_Factory(t) {\n  return new (t || ReservationListComponent)(i0.ɵɵdirectiveInject(i1.ReservationService), i0.ɵɵdirectiveInject(i2.Router));\n};\nReservationListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReservationListComponent,\n  selectors: [[\"app-reservation-list\"]],\n  decls: 17,\n  vars: 1,\n  consts: [[1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-info\", 3, \"click\"]],\n  template: function ReservationListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \" Reservation List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 0)(3, \"thead\")(4, \"tr\")(5, \"th\");\n      i0.ɵɵtext(6, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Phone Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Party Size\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Time\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"tbody\");\n      i0.ɵɵtemplate(16, ReservationListComponent_tr_16_Template, 13, 4, \"tr\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.reservations);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ReservationListComponent_tr_16_Template_button_click_10_listener","restoredCtx","ɵɵrestoreView","_r3","reservation_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","updateReservation","id","ɵɵadvance","ɵɵtextInterpolate","name","phoneNumber","partySize","time","ReservationListComponent","constructor","reservationService","router","ngOnInit","getReservations","getReservationsList","subscribe","data","reservations","console","log","navigate","ɵɵdirectiveInject","i1","ReservationService","i2","Router","selectors","decls","vars","consts","template","ReservationListComponent_Template","rf","ctx","ɵɵtemplate","ReservationListComponent_tr_16_Template","ɵɵproperty"],"sources":["C:\\Users\\Cooper\\Documents\\Angular\\citizens-angular-app\\citizens-angular\\src\\app\\reservation-list\\reservation-list.component.ts","C:\\Users\\Cooper\\Documents\\Angular\\citizens-angular-app\\citizens-angular\\src\\app\\reservation-list\\reservation-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Reservation } from '../reservation'\nimport { ReservationService } from '../reservation.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reservation-list',\n  templateUrl: './reservation-list.component.html',\n  styleUrls: ['./reservation-list.component.css']\n})\nexport class ReservationListComponent implements OnInit {\n\n  reservations?: Reservation[];\n\n  constructor(private reservationService: ReservationService,\n    private router: Router) {}\n\n  ngOnInit(): void {\n    this.getReservations();\n/*\n    this.reservations = [{\n      \"id\": 1,\n      \"name\": \"Bill Shakespeare\",\n      \"phonenumber\": \"111-111-1111\",\n      \"partysize\": 12,\n      \"time\": new Date(\"2023-06-28T18:30:00\")\n    }] */\n  }\n\n\n  private getReservations(){\n    this.reservationService.getReservationsList().subscribe(data => {\n      this.reservations = data;\n      console.log(data);\n    });\n  }\n\n  updateReservation(id: number){\n    this.router.navigate(['update-reservation', id]);\n  }\n}\n","<h2> Reservation List</h2>\n<table class = \"table table-striped\">\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Phone Number</th>\n            <th>Party Size</th>\n            <th>Time</th>\n            <th>Actions</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor = \"let reservation of reservations\">\n            <td>{{ reservation.name }}</td>\n            <td>{{ reservation.phoneNumber }}</td>\n            <td>{{ reservation.partySize }}</td>\n            <td>{{ reservation.time }}</td>\n            <td>\n                <button (click) = \"updateReservation(reservation.id)\" class = \"btn btn-info\">Update</button>)\n            </td>\n\n        </tr>\n    </tbody>\n</table>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}